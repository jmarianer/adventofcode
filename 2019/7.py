from intcode import Prog
import itertools, queue
from utils import queue_iterator

prog = [3, 8, 1001, 8, 10, 8, 105, 1, 0, 0, 21, 30, 47, 60, 81, 102, 183, 264,
        345, 426, 99999, 3, 9, 1002, 9, 5, 9, 4, 9, 99, 3, 9, 1002, 9, 5, 9,
        1001, 9, 4, 9, 1002, 9, 4, 9, 4, 9, 99, 3, 9, 101, 2, 9, 9, 1002, 9, 4,
        9, 4, 9, 99, 3, 9, 1001, 9, 3, 9, 1002, 9, 2, 9, 101, 5, 9, 9, 1002, 9,
        2, 9, 4, 9, 99, 3, 9, 102, 4, 9, 9, 101, 4, 9, 9, 1002, 9, 3, 9, 101,
        2, 9, 9, 4, 9, 99, 3, 9, 101, 1, 9, 9, 4, 9, 3, 9, 1002, 9, 2, 9, 4, 9,
        3, 9, 1002, 9, 2, 9, 4, 9, 3, 9, 101, 2, 9, 9, 4, 9, 3, 9, 1002, 9, 2,
        9, 4, 9, 3, 9, 101, 1, 9, 9, 4, 9, 3, 9, 1001, 9, 1, 9, 4, 9, 3, 9,
        102, 2, 9, 9, 4, 9, 3, 9, 1002, 9, 2, 9, 4, 9, 3, 9, 1001, 9, 1, 9, 4,
        9, 99, 3, 9, 1001, 9, 2, 9, 4, 9, 3, 9, 1002, 9, 2, 9, 4, 9, 3, 9, 101,
        2, 9, 9, 4, 9, 3, 9, 1002, 9, 2, 9, 4, 9, 3, 9, 1001, 9, 2, 9, 4, 9, 3,
        9, 1002, 9, 2, 9, 4, 9, 3, 9, 1002, 9, 2, 9, 4, 9, 3, 9, 101, 1, 9, 9,
        4, 9, 3, 9, 1002, 9, 2, 9, 4, 9, 3, 9, 1002, 9, 2, 9, 4, 9, 99, 3, 9,
        101, 2, 9, 9, 4, 9, 3, 9, 101, 1, 9, 9, 4, 9, 3, 9, 1001, 9, 2, 9, 4,
        9, 3, 9, 1002, 9, 2, 9, 4, 9, 3, 9, 102, 2, 9, 9, 4, 9, 3, 9, 1001, 9,
        2, 9, 4, 9, 3, 9, 102, 2, 9, 9, 4, 9, 3, 9, 1002, 9, 2, 9, 4, 9, 3, 9,
        101, 1, 9, 9, 4, 9, 3, 9, 1001, 9, 2, 9, 4, 9, 99, 3, 9, 102, 2, 9, 9,
        4, 9, 3, 9, 1002, 9, 2, 9, 4, 9, 3, 9, 101, 2, 9, 9, 4, 9, 3, 9, 102,
        2, 9, 9, 4, 9, 3, 9, 1001, 9, 1, 9, 4, 9, 3, 9, 1001, 9, 2, 9, 4, 9, 3,
        9, 101, 1, 9, 9, 4, 9, 3, 9, 102, 2, 9, 9, 4, 9, 3, 9, 101, 2, 9, 9, 4,
        9, 3, 9, 1002, 9, 2, 9, 4, 9, 99, 3, 9, 1002, 9, 2, 9, 4, 9, 3, 9, 102,
        2, 9, 9, 4, 9, 3, 9, 1001, 9, 1, 9, 4, 9, 3, 9, 102, 2, 9, 9, 4, 9, 3,
        9, 102, 2, 9, 9, 4, 9, 3, 9, 1001, 9, 2, 9, 4, 9, 3, 9, 101, 1, 9, 9,
        4, 9, 3, 9, 1001, 9, 2, 9, 4, 9, 3, 9, 1001, 9, 1, 9, 4, 9, 3, 9, 101,
        1, 9, 9, 4, 9, 99]


# Part I
def run_amps_once(p):
    sig = 0
    for i in p:
        sig = list(Prog(prog).run(iter([i, sig])))[0]
    return sig
print(max(run_amps_once(p) for p in itertools.permutations([0,1,2,3,4])))


# Part II
def run_feedback_loop(p):
    queue1 = queue.Queue()
    queue1.put(p[0])
    queue1.put(0)
    prog1 = Prog(prog).run(queue_iterator(queue1))
    prog2 = Prog(prog).run(itertools.chain([p[1]], prog1))
    prog3 = Prog(prog).run(itertools.chain([p[2]], prog2))
    prog4 = Prog(prog).run(itertools.chain([p[3]], prog3))
    prog5 = Prog(prog).run(itertools.chain([p[4]], prog4))
    for i in prog5:
        sig = i
        queue1.put(i)
    return sig

print(max(run_feedback_loop(p) for p in itertools.permutations([5,6,7,8,9])))
